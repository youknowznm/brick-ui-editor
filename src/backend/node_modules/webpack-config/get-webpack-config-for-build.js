/**
 * @file: getEntry
 * @author: Cuttle Cong
 * @date: 2018/1/20
 * @description:
 */
var _ = require('lodash')
var config = require('common/config')
var BundleAnalyzerPlugin = require('webpack-bundle-analyzer')
    .BundleAnalyzerPlugin
var getSingleEntryWebpackConfig = require('webpack-config/get-entry-webpack-config')

module.exports = function (buildPlanConfig, options) {
    var dev = options.dev;
    var sourceMap = options.sourceMap;
    var enableProfile = options.enableProfile;
    var minify = options.minify;
    var presets = options.presets || [];

    var webpackConfig = [];
    var entries = {};
    _.each(buildPlanConfig, function (template, entryKey) {

        var entryConfig = config.entries[entryKey];
        var entryScriptPath = entryConfig.entry;
        entries[entryKey] = presets.concat(entryScriptPath);

        var eachConfig = getSingleEntryWebpackConfig(_.extend({},
            entryConfig,
            {
                minify: minify,
                dev: dev,
                template:
                entryConfig.template &&
                entryConfig.template[dev ? 'dev' : 'prod'],
                entryName: entryKey,
                data: entryConfig.data
            }
        ));
        eachConfig.devtool = sourceMap ? 'cheap-source-map' : false
        eachConfig.entry = {[entryKey]: entries[entryKey]}

        if (enableProfile) {
            eachConfig.plugins.push(
                new BundleAnalyzerPlugin({
                    analyzerMode: !dev ? 'static' : 'server',
                    reportFilename: 'report_' + entryKey + '.html'
                })
            );

            eachConfig.profile = true;
        }
        webpackConfig.push(eachConfig)
    })

    return webpackConfig
}
