const fs = require('fs');

const config = require('common/config');
const utils = require('common/utils');

const _ = require('lodash')
const getEntryContent = require('./get-entry-content');

const TEMPLATE_NO_ENTRY = config.CONST.TEMPLATE_NO_ENTRY;

/**
 * @def: {entryName, entryPath, isDev} => entryConfig
 *  entryConfig: {entryName: scriptList}
 *      entryName: string
 *      scriptList: [...plugins, entryPath]
 */
module.exports = function getEntryObject({
                                             entryName,
                                             entryPath,
                                             isDev
                                         }) {
    if (!isDev) {
        return {
            [entryName]: entryPath
        };
    }

    let entryConfig = config.entries[entryName];

    let pageEntryPath = utils.p(
        config.path.devEntries + '/' + entryName + '.js'
    );
    var entries = _.castArray(entryConfig.entry)
    if (entryConfig.openOnDefault) {
        fs.writeFileSync(pageEntryPath, getEntryContent(entries));
        entryConfig.turnedOn = true;
    } else if (!fs.existsSync(pageEntryPath)) {
        fs.writeFileSync(pageEntryPath, TEMPLATE_NO_ENTRY);
        entryConfig.turnedOn = false;
    } else {
        let currentContent = fs.readFileSync(pageEntryPath).toString();
        if (
            currentContent !== TEMPLATE_NO_ENTRY
            && currentContent !== getEntryContent(entries)
        ) {
            fs.writeFileSync(
                pageEntryPath,
                getEntryContent(entries)
            )
            entryConfig.turnedOn = true
        } else if (currentContent === TEMPLATE_NO_ENTRY) {
            entryConfig.turnedOn = false
        } else {
            entryConfig.turnedOn = true
        }
    }

    // console.log('@debug conifg = ', pageConfig)
    return [
        // 已经使用 babel-runtime
        // 'babel-polyfill',
        'react-hot-loader/patch',
        // https://github.com/glenjamin/webpack-hot-middleware#multi-compiler-mode
        'webpack-hot-middleware/client?reload=true&noInfo=false&name=' + entryName,
    ].concat(pageEntryPath);
};
